function stim_params = stim_params_defaults(varargin)
%   Default stimulation parameters for grapevine stimulator
%   Use with 'stim_params_to_string.m' function to generate stim_string

stim_params_defaults = struct( ...
    'chan_list'     ,[3 5 7],...
    'Amp'           ,[2.286],...
    'Freq'          ,[30],...
    'PW'            ,[0.2],...
    'TL'            ,[1000],...
    'Delay'         ,[0],...
    'Pol'           ,[1],...
    'FS'            ,[0]...
    );
    
% stim_string           = [   'Elect = ' num2str(2) ',' num2str(4) ',' num2str(6) ',;' ...
%                             'TL = ' num2str(1000) ',' num2str(1000) ',' num2str(1000) ',; ' ...
%                             'Freq = ' num2str(60) ',' num2str(60) ',' num2str(60) ',; ' ...
%                             'Dur = ' num2str(0.2) ',' num2str(0.2) ',' num2str(0.2) ',; ' ...
%                             'Amp = ' num2str(127) ',' num2str(127) ',' num2str(127) ',; ' ...     
%                             'TD = ' num2str(0) ',' num2str(0) ',' num2str(0) ',; ' ...
%                             'FS = 0,0,0,; ' ...
%                             'PL = 0,0,0,;']; 


% fill default options missing from input argument
if nargin
    stim_params = varargin{1};
else
    stim_params = [];
end

all_param_names   = fieldnames(stim_params_defaults);
input_param_names = fieldnames(stim_params);

for i = 1:numel(input_param_names)
    if ~any(strcmp(input_param_names{i},all_param_names))
        f = errordlg(sprintf('Invalid stim parameter\n"%s"',input_param_names{i}),'Need coffee??');
        return;
    end
end
        
for i=1:numel(all_param_names)
    if ~isfield(stim_params,all_param_names(i))
        stim_params.(all_param_names{i}) = stim_params_defaults.(all_param_names{i});
    end
end
